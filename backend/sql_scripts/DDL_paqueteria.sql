-- DDL

-- Eliminacion previa de tablas
DROP TABLE PERSONA CASCADE CONSTRAINT;
DROP TABLE CLIENTE CASCADE CONSTRAINT;
DROP TABLE CARGO CASCADE CONSTRAINT;
DROP TABLE EMPLEADO CASCADE CONSTRAINT;
DROP TABLE CENTRO_DISTRIBUCION CASCADE CONSTRAINT;
DROP TABLE VEHICULO CASCADE CONSTRAINT;
DROP TABLE PAQUETE CASCADE CONSTRAINT;
DROP TABLE RUTA CASCADE CONSTRAINT;
DROP TABLE FACTURA CASCADE CONSTRAINT;
DROP TABLE PAQUETE_RUTA CASCADE CONSTRAINT;
DROP TABLE EMPLEADO_VEHICULO CASCADE CONSTRAINT;
DROP TABLE EMPLEADO_CENTRO CASCADE CONSTRAINT;

-- Tabla PERSONA
CREATE TABLE PERSONA (
    ID_PERSONA INT PRIMARY KEY,
    NOMBRE_PERSONA VARCHAR(255),
    CEDULA_PERSONA VARCHAR(10),
    TELEFONO_PERSONA VARCHAR(10),
    EDAD NUMBER(2,0),
    SEXO VARCHAR(1)
);

-- Tabla CLIENTE
CREATE TABLE CLIENTE (
    ID_CLIENTE INT PRIMARY KEY,
    DIRECCION_CLIENTE VARCHAR(255),
    ID_PERSONA INT,
    FOREIGN KEY (ID_PERSONA) REFERENCES PERSONA(ID_PERSONA)
);

-- Tabla CARGO
CREATE TABLE CARGO (
    ID_CARGO INT PRIMARY KEY,
    NOMBRE_CARGO VARCHAR(255),
    DESCRIPCION_CARGO VARCHAR(255),
    SALARIO_CARGO NUMERIC(10,2)
);

-- Tabla EMPLEADO
CREATE TABLE EMPLEADO (
    ID_EMPLEADO INT PRIMARY KEY,
    ID_PERSONA INT,
    ID_CARGO INT,
    FOREIGN KEY (ID_PERSONA) REFERENCES PERSONA(ID_PERSONA),
    FOREIGN KEY (ID_CARGO) REFERENCES CARGO(ID_CARGO)
);

-- Tabla CENTRO_DISTRIBUCION
CREATE TABLE CENTRO_DISTRIBUCION (
    ID_CENTRO_DISTRIBUCION INT PRIMARY KEY,
    UBICACION_CEN_DIST VARCHAR(255),
    CAPACIDAD_ALMACENAMIENTO NUMERIC(10,2)
);

-- Tabla VEHICULO
CREATE TABLE VEHICULO (
    ID_VEHICULO INT PRIMARY KEY,
    TIPO VARCHAR(255),
    CAPACIDAD_VEHICULO NUMERIC(6,2),
    ESTADO_VEHICULO INT NOT NULL,
    ID_CENTRO_DISTRIBUCION INT,
    FOREIGN KEY (ID_CENTRO_DISTRIBUCION) REFERENCES CENTRO_DISTRIBUCION(ID_CENTRO_DISTRIBUCION),
    CONSTRAINT chk_estado_vehiculo CHECK (ESTADO_VEHICULO IN (0, 1, 2))
    -- 0=Disponible, 1=En mantenimiento, 2=Fuera de servicio
);

-- Tabla PAQUETE
CREATE TABLE PAQUETE (
    ID_PAQUETE INT PRIMARY KEY,
    PESO NUMERIC(6,2),
    DIMENSIONES VARCHAR(255),
    CONTENIDO VARCHAR(255),
    ESTADO_PAQUETE INT NOT NULL,
    ID_CLIENTE INT,
    ID_CENTRO_DISTRIBUCION INT,
    FOREIGN KEY (ID_CLIENTE) REFERENCES CLIENTE(ID_CLIENTE),
    FOREIGN KEY (ID_CENTRO_DISTRIBUCION) REFERENCES CENTRO_DISTRIBUCION(ID_CENTRO_DISTRIBUCION),
    CONSTRAINT chk_estado_paquete CHECK (ESTADO_PAQUETE IN (0, 1, 2))
    -- 0=En transito, 1=Entregado, 2=Cancelado
);

-- Tabla RUTA
CREATE TABLE RUTA (
    ID_RUTA INT PRIMARY KEY,
    ORIGEN VARCHAR(255),
    DESTINO VARCHAR(255),
    FECHA_SALIDA DATE,
    FECHA_LLEGADA DATE,
    ESTADO INT NOT NULL,
    CONSTRAINT chk_estado_ruta CHECK (ESTADO IN (0, 1))
    -- 0=En curso, 1=Completada
);

-- Tabla FACTURA
CREATE TABLE FACTURA (
    ID_FACTURA INT PRIMARY KEY,
    DETALLE_CARGO VARCHAR(255),
    ESTADOPAGO INT NOT NULL,
    MONTO_TOTAL NUMBER(11,2),
    FECHA_FACTURA DATE,
    METODO_PAGO VARCHAR(255),
    IVA NUMBER(2,2),
    DESCUENTO NUMBER(2,2),
    ID_PAQUETE INT,
    FOREIGN KEY (ID_PAQUETE) REFERENCES PAQUETE(ID_PAQUETE),
    CONSTRAINT chk_estado_pago CHECK (ESTADOPAGO IN (0, 1))
    -- 0=Pendiente, 1=Pagado
);

-- Relacion M:N entre PAQUETE y RUTA
CREATE TABLE PAQUETE_RUTA (
    ID_PAQUETE INT,
    ID_RUTA INT,
    PRIMARY KEY (ID_PAQUETE, ID_RUTA),
    FOREIGN KEY (ID_PAQUETE) REFERENCES PAQUETE(ID_PAQUETE),
    FOREIGN KEY (ID_RUTA) REFERENCES RUTA(ID_RUTA)
);

-- Relacion M:N entre EMPLEADO y VEHICULO
CREATE TABLE EMPLEADO_VEHICULO (
    ID_EMPLEADO INT,
    ID_VEHICULO INT,
    PRIMARY KEY (ID_EMPLEADO, ID_VEHICULO),
    FOREIGN KEY (ID_EMPLEADO) REFERENCES EMPLEADO(ID_EMPLEADO),
    FOREIGN KEY (ID_VEHICULO) REFERENCES VEHICULO(ID_VEHICULO)
);

-- Relacion M:N entre EMPLEADO y CENTRO_DISTRIBUCION
CREATE TABLE EMPLEADO_CENTRO (
    ID_EMPLEADO INT,
    ID_CENTRO_DISTRIBUCION INT,
    PRIMARY KEY (ID_EMPLEADO, ID_CENTRO_DISTRIBUCION),
    FOREIGN KEY (ID_EMPLEADO) REFERENCES EMPLEADO(ID_EMPLEADO),
    FOREIGN KEY (ID_CENTRO_DISTRIBUCION) REFERENCES CENTRO_DISTRIBUCION(ID_CENTRO_DISTRIBUCION)
);
